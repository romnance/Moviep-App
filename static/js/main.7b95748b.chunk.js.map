{"version":3,"sources":["components/Movie.js","components/Charts.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","vote","title","poster_path","overview","vote_average","className","src","alt","genre","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","moviestat","Charts","name","href","options","display","text","fontSize","legend","position","App","useState","movies","setMovies","searchTerm","setSearchTerm","useEffect","getMovies","API","fetch","then","response","json","results","onSubmit","e","preventDefault","placeholder","type","value","onChange","target","length","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b95748b.chunk.js","sourcesContent":["import React from 'react';\n\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\"\nconst setVoteClass = (vote) => {\n    if (vote >= 8) {\n        return 'green'\n    } else if (vote >= 6 ) {\n        return 'orange'\n    } else {\n        return 'red';\n    }\n}\n\nconst Movie = ( { title, poster_path, overview, vote_average } ) => {\n    return (\n        <div className='movie'>\n            <img src={IMG_API + poster_path} alt={title} />\n            <div className='movie-info'>\n                <h3>{title}</h3>\n                <span className={`tag ${setVoteClass(vote_average)}`}>\n                    {vote_average}\n                </span>\n            </div>\n            <div className='movie-over'>\n                <p>{overview}</p>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Movie\n","import React from 'react';\nimport {Line, Pie} from 'react-chartjs-2';\n\nconst CHART_API = \"\";\n\nconst genre = {\n    labels: ['Drama', 'Comdey', 'Documentary', 'Thriller',\n             'Adventure', 'Action', 'Horror', 'Romantic Comedy', \n            'Black Comdey', 'Musical', 'Western', 'Concert', 'Multiple Genres', 'Reality', 'Educational'],\n    datasets: [\n      {\n        label: 'Amount of movies',\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: 'orange',\n        borderColor: 'ghostwhite',\n        borderWidth: 2,\n        data: [ 5404, 2383, 2373, 1151, 1078, 1061, 655, 608, 202, 197, 85, 76, 44, 4, 1]\n      }\n    ]\n  }\n\n  const moviestat = {\n    labels: ['2000', '2001', '2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013', '2014',\n             '2015', '2016', '2017', '2018', '2019', '2020'],\n    datasets: [\n      {\n        label: 'Number of movies released',\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: 'limegreen',\n        borderColor: 'ghostwhite',\n        borderWidth: 2,\n        data: [371, 356, 480, 506, 551, 547, 608, 632, 607, 520, 538, 601, 669, 689, 708, 706, 737, 740, 873, 792, 329]\n      }\n    ]\n  }\n\n  \n\n\nfunction Charts(data) {\n\n    return (\n        <div className='charts-container'>\n            <a className='button up' name='charts' href='#button'>UP</a>\n        <div className='line-chart'>\n        <Line\n          data={moviestat}\n          options={{\n            title:{\n              display:true,\n              text:'Number of movies released in the United States and Canada from 2000 to 2020',\n              fontSize:15\n            },\n            legend:{\n              display:false,\n              position:'right'\n            }\n          }}\n        />\n        </div>\n        <div className='pie-chart'>\n        <Pie\n          data={genre}\n          options={{\n            title:{\n              display:true,\n              text:'Number of movies released in North America from 1995 to 2020, by genre',\n              fontSize:15\n            },\n            legend:{\n              display:false,\n              position:'right'\n            }\n          }}\n        />\n        </div>\n        </div>\n    )\n}\n\nexport default Charts;\n","import { useEffect, useState } from 'react';\nimport Movie from './components/Movie.js';\nimport Charts from './components/Charts';\n\n\nconst FEATERED_API = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=565aae61031ff071e3eecd675ccebbb4&page=1\";\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?&api_key=565aae61031ff071e3eecd675ccebbb4&query=\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    getMovies(FEATERED_API)\n  }, []);\n\n  const getMovies = (API) => {\n    fetch(API)\n    .then(response => response.json())\n    .then(data => {\n      setMovies(data.results)\n    }) \n  }\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n\n    if (searchTerm) {\n      getMovies(SEARCH_API+searchTerm)\n    \n    setSearchTerm('');\n    }\n  }\n\n  const handleOnChange = (e) => {\n    setSearchTerm(e.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Movie Time</h1>\n        <div className='menu'>\n        <a className=\"button\" href=\"#charts\" name=\"button\">STATISTICS</a>\n          <form onSubmit={handleOnSubmit}>\n          <input \n          className='search' \n          placeholder='Search...' \n          type='search' \n          value={searchTerm}\n          onChange={handleOnChange}\n          ></input>\n          </form>\n        </div>\n      </header>\n\n       <div className='movie-container'>\n         {movies.length > 0 &&  movies.map(movie => (\n           <Movie key={movie.id} {...movie} />\n         ))}\n       </div>\n\n       <Charts /> \n      \n      <footer>\n      <span>Copyright &#169; 2021</span>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App /> {/* The various pages will be displayed by the `Main` component. */}\n  </BrowserRouter>\n  ), document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}